--# For this project, I downloaded Spotify data from Kaggle.
--# Then I created a table to insert Spotify data into.
--# Finally, I performed analytics on the data using SQL. 

--#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
);


--#Then I inserted the Spotify Data .csv into the table.

--#Next, I explored the data using the following SQL.


--What is the average popularity, danceability, and evergy by artist and track? 
SELECT artist_name, track_name, avg(popularity),avg(danceability), avg(energy)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

--Who are the top 10 artists based on popularity? 
SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC Limit 10;

--What artist released the longest song? 
SELECT artist_name, track_name, max(duration_ms)
FROM BIT_DB.Spotifydata;

--What's the average danceability for the 10 most popular songs?
SELECT artist_name, track_name,avg(danceability),popularity
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY popularity DESC Limit 10;

--What artist had another artist featured in their song? 
SELECT artist_name, track_name
FROM BIT_DB.Spotifydata
WHERE track_name LIKE '%feat%'
ORDER by popularity DESC;

--Which song had the highest energy?
SELECT artist_name, track_name, max (energy)
FROM BIT_DB.Spotifydata;


--#Next I created a CTE (Common Table Expression)
--Calculate average popularity for the artists in the table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and labeled them as a “Top Star”.
WITH popularity_average_CTE AS (SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData as s 
GROUP BY s.artist_name)
 
SELECT  artist_name,average_popularity,'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;

